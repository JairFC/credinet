services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: credinet_backend
    ports:
      - "8001:8000"
    volumes:
      - ./backend:/code
    environment:
      POSTGRES_USER: credinet_user
      POSTGRES_PASSWORD: credinet_pass
      POSTGRES_DB: credinet_db
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - credinet

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: credinet_frontend
    ports:
      - "5174:5173"
    networks:
      - credinet
    depends_on:
      - backend

  db:
    image: postgres:15
    container_name: credinet_db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/10_init_schema.sql
      - ./db/seeds/01_initial_data.sql:/docker-entrypoint-initdb.d/20_initial_data.sql
    environment:
      POSTGRES_USER: credinet_user
      POSTGRES_PASSWORD: credinet_pass
      POSTGRES_DB: credinet_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "psql -U credinet_user -d credinet_db -c 'SELECT 1 FROM users LIMIT 1;'"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - credinet

  smoke-tester:
    build:
      context: ./backend
    container_name: credinet_smoke_tester
    depends_on:
      backend:
        condition: service_started
    command: ["python", "smoke_test.py"]
    environment:
      POSTGRES_USER: credinet_user
      POSTGRES_PASSWORD: credinet_pass
      POSTGRES_DB: credinet_db
      POSTGRES_HOST: db
    networks:
      - credinet

  smoke-tester:
    build:
      context: ./backend
    container_name: credinet_smoke_tester
    depends_on:
      backend:
        condition: service_started
    command: ["python", "smoke_test.py"]
    environment:
      POSTGRES_USER: credinet_user
      POSTGRES_PASSWORD: credinet_pass
      POSTGRES_DB: credinet_db
      POSTGRES_HOST: db
    networks:
      - credinet

volumes:
  postgres_data:

networks:
  credinet:
    driver: bridge